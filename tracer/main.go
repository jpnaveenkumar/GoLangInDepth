package main

import (
	"fmt"
	"log"
	"os"
	"runtime"
	"runtime/trace"
	"time"
)

func printNumbers(n int) {
	for i := 0; i < 500; i++ {
		fmt.Print(n)
	}
}

func concurrentFunction() {
	fmt.Println("Concurrent Code Execution:")
	runtime.GOMAXPROCS(1)
	for i := 0; i < 1000; i++ {
		go printNumbers(0)
		go printNumbers(1)
	}
	time.Sleep(time.Second)
}

func parallelFunction() {
	fmt.Println("\nParallel Code Execution:")
	runtime.GOMAXPROCS(3)
	for i := 0; i < 1000; i++ {
		go printNumbers(0)
		go printNumbers(1)
	}
	time.Sleep(time.Second)
}

func main() {
	f, err := os.Create("trace.out")
	if err != nil {
		log.Fatalf("failed to create trace output file: %v", err)
	}
	defer func() {
		if err := f.Close(); err != nil {
			log.Fatalf("failed to close trace file: %v", err)
		}
	}()
	if err := trace.Start(f); err != nil {
		log.Fatalf("failed to start trace: %v", err)
	}
	defer trace.Stop()
	//concurrentFunction()
	parallelFunction()
}

//Results :
//
//Concurrent Code Execution:

//Parallel Code Execution:
//1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000001111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000011111111111111111111111111111000000000000000000000000000001111111111111111111111100000011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
